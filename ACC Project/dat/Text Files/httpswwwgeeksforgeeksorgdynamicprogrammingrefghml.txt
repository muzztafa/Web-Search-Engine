dynamic programming - geeksforgeeks skip to content tutorials practice ds & algo. must do questions dsa topic-wise dsa company-wise algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php software designs software design patterns system design tutorial school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials geek on the top careers internship jobs apply for jobs post a job job-a-thon gsc 2022 courses write come write articles for us and get featured practice learn and code with the best industry experts premium get access to ad-free content, doubt assistance and more! jobs come and find your dream job with us geeks digest quizzes geeks campus gblog articles ide campus mantri home saved videos courses gblog puzzles what's new ? change language data structures algorithms interview preparation topic-wise practice c++ java python competitive programming machine learning web development sde sheet puzzles gfg school projects related articles ? table of contents algorithms algorithms introduction to algorithms difference between algorithm, pseudocode and program difference between algorithm and flowchart analysis of algorithms analysis of algorithms | set 1 (asymptotic analysis) analysis of algorithms | set 2 (worst, average and best cases) analysis of algorithms | set 3 (asymptotic notations) analysis of algorithms | little o and little omega notations lower and upper bound theory analysis of algorithms | set 4 (analysis of loops) analysis of algorithm | set 4 (solving recurrences) analysis of algorithm | set 5 (amortized analysis introduction) what does ?space complexity? mean? pseudo-polynomial algorithms searching and sorting interpolation search vs binary search stability in sorting algorithms when does the worst case of quicksort occur? lower bound for comparison based sorting algorithms which sorting algorithm makes minimum number of memory writes? find the minimum length unsorted subarray, sorting which makes the complete array sorted merge sort for linked lists sort a nearly sorted (or k sorted) array iterative quick sort greedy algorithms activity selection problem | greedy algo-1 kruskal?s minimum spanning tree algorithm | greedy algo-2 huffman coding | greedy algo-3 efficient huffman coding for sorted input | greedy algo-4 prim?s minimum spanning tree (mst) | greedy algo-5 prim?s mst for adjacency list representation | greedy algo-6 dijkstra?s shortest path algorithm | greedy algo-7 dijkstra?s algorithm for adjacency list representation | greedy algo-8 job sequencing problem dynamic programming overlapping subproblems property in dynamic programming | dp-1 optimal substructure property in dynamic programming | dp-2 longest increasing subsequence | dp-3 longest common subsequence | dp-4 edit distance | dp-5 min cost path | dp-6 coin change | dp-7 matrix chain multiplication | dp-8 binomial coefficient | dp-9 0-1 knapsack problem | dp-10 dynamic programming pattern searching naive algorithm for pattern searching kmp algorithm for pattern searching rabin-karp algorithm for pattern searching optimized naive algorithm for pattern searching finite automata algorithm for pattern searching pattern searching | set 6 (efficient construction of finite automata) boyer moore algorithm for pattern searching suffix array | set 1 (introduction) anagram substring search (or search for all permutations) pattern searching using a trie of all suffixes pattern searching other string algorithms manacher?s algorithm ? linear time longest palindromic substring ? part 1 manacher?s algorithm ? linear time longest palindromic substring ? part 2 manacher?s algorithm ? linear time longest palindromic substring ? part 3 manacher?s algorithm ? linear time longest palindromic substring ? part 4 longest even length substring such that sum of first and second half is same print all possible strings that can be made by placing spaces backtracking write a program to print all permutations of a given string the knight?s tour problem | backtracking-1 rat in a maze | backtracking-2 n queen problem | backtracking-3 subset sum | backtracking-4 m coloring problem | backtracking-5 hamiltonian cycle | backtracking-6 sudoku | backtracking-7 tug of war solving cryptarithmetic puzzles | backtracking-8 divide and conquer divide and conquer algorithm | introduction write a program to calculate pow(x,n) median of two sorted arrays of same size count inversions in an array | set 1 (using merge sort) closest pair of points using divide and conquer algorithm divide and conquer | set 5 (strassen?s matrix multiplication) quick sort vs merge sort divide and conquer geometric algorithms closest pair of points | o(nlogn) implementation how to check if two given line segments intersect? how to check if a given point lies inside or outside a polygon? convex hull | set 1 (jarvis?s algorithm or wrapping) convex hull | set 2 (graham scan) given n line segments, find if any two segments intersect check whether a given point lies inside a triangle or not how to check if given four points form a square mathematical algorithms write an efficient method to check if a number is multiple of 3 efficient way to multiply with 7 lucky numbers write a program to add two numbers in base 14 babylonian method for square root multiply two integers without using multiplication, division and bitwise operators, and no loops print all combinations of points that can compose a given number write you own power without using multiplication(*) and division(/) operators program for fibonacci numbers bit algorithms find the element that appears once detect if two integers have opposite signs count total set bits in all numbers from 1 to n swap bits in a given number add two numbers without using arithmetic operators smallest of three integers without comparison operators a boolean array puzzle program to count number of set bits in an (big) array next higher number with same number of set bits optimization techniques | set 1 (modulus) graph algorithms graph and its representations breadth first search or bfs for a graph depth first search or dfs for a graph applications of depth first search detect cycle in a directed graph disjoint set (or union-find) | set 1 (detect cycle in an undirected graph) detect cycle in an undirected graph longest path in a directed acyclic graph topological sorting check whether a given graph is bipartite or not randomized algorithms linearity of expectation expected number of trials until success randomized algorithms | set 0 (mathematical background) randomized algorithms | set 1 (introduction and analysis) randomized algorithms | set 2 (classification and applications) randomized algorithms | set 3 (1/2 approximate median) karger?s algorithm for minimum cut | set 1 (introduction and implementation) k?th smallest/largest element in unsorted array | set 2 (expected linear time) reservoir sampling shuffle a given array using fisher?yates shuffle algorithm branch and bound 0/1 knapsack using branch and bound implementation of 0/1 knapsack using branch and bound 8 puzzle problem using branch and bound job assignment problem using branch and bound n queen problem using branch and bound traveling salesman problem using branch and bound quizzes on algorithms analysis of algorithms sorting divide and conquer dynamic programming backtracking algorithm misc np complete searching analysis of algorithms (recurrences) table of contents algorithms algorithms introduction to algorithms difference between algorithm, pseudocode and program difference between algorithm and flowchart analysis of algorithms analysis of algorithms | set 1 (asymptotic analysis) analysis of algorithms | set 2 (worst, average and best cases) analysis of algorithms | set 3 (asymptotic notations) analysis of algorithms | little o and little omega notations lower and upper bound theory analysis of algorithms | set 4 (analysis of loops) analysis of algorithm | set 4 (solving recurrences) analysis of algorithm | set 5 (amortized analysis introduction) what does ?space complexity? mean? pseudo-polynomial algorithms searching and sorting interpolation search vs binary search stability in sorting algorithms when does the worst case of quicksort occur? lower bound for comparison based sorting algorithms which sorting algorithm makes minimum number of memory writes? find the minimum length unsorted subarray, sorting which makes the complete array sorted merge sort for linked lists sort a nearly sorted (or k sorted) array iterative quick sort greedy algorithms activity selection problem | greedy algo-1 kruskal?s minimum spanning tree algorithm | greedy algo-2 huffman coding | greedy algo-3 efficient huffman coding for sorted input | greedy algo-4 prim?s minimum spanning tree (mst) | greedy algo-5 prim?s mst for adjacency list representation | greedy algo-6 dijkstra?s shortest path algorithm | greedy algo-7 dijkstra?s algorithm for adjacency list representation | greedy algo-8 job sequencing problem dynamic programming overlapping subproblems property in dynamic programming | dp-1 optimal substructure property in dynamic programming | dp-2 longest increasing subsequence | dp-3 longest common subsequence | dp-4 edit distance | dp-5 min cost path | dp-6 coin change | dp-7 matrix chain multiplication | dp-8 binomial coefficient | dp-9 0-1 knapsack problem | dp-10 dynamic programming pattern searching naive algorithm for pattern searching kmp algorithm for pattern searching rabin-karp algorithm for pattern searching optimized naive algorithm for pattern searching finite automata algorithm for pattern searching pattern searching | set 6 (efficient construction of finite automata) boyer moore algorithm for pattern searching suffix array | set 1 (introduction) anagram substring search (or search for all permutations) pattern searching using a trie of all suffixes pattern searching other string algorithms manacher?s algorithm ? linear time longest palindromic substring ? part 1 manacher?s algorithm ? linear time longest palindromic substring ? part 2 manacher?s algorithm ? linear time longest palindromic substring ? part 3 manacher?s algorithm ? linear time longest palindromic substring ? part 4 longest even length substring such that sum of first and second half is same print all possible strings that can be made by placing spaces backtracking write a program to print all permutations of a given string the knight?s tour problem | backtracking-1 rat in a maze | backtracking-2 n queen problem | backtracking-3 subset sum | backtracking-4 m coloring problem | backtracking-5 hamiltonian cycle | backtracking-6 sudoku | backtracking-7 tug of war solving cryptarithmetic puzzles | backtracking-8 divide and conquer divide and conquer algorithm | introduction write a program to calculate pow(x,n) median of two sorted arrays of same size count inversions in an array | set 1 (using merge sort) closest pair of points using divide and conquer algorithm divide and conquer | set 5 (strassen?s matrix multiplication) quick sort vs merge sort divide and conquer geometric algorithms closest pair of points | o(nlogn) implementation how to check if two given line segments intersect? how to check if a given point lies inside or outside a polygon? convex hull | set 1 (jarvis?s algorithm or wrapping) convex hull | set 2 (graham scan) given n line segments, find if any two segments intersect check whether a given point lies inside a triangle or not how to check if given four points form a square mathematical algorithms write an efficient method to check if a number is multiple of 3 efficient way to multiply with 7 lucky numbers write a program to add two numbers in base 14 babylonian method for square root multiply two integers without using multiplication, division and bitwise operators, and no loops print all combinations of points that can compose a given number write you own power without using multiplication(*) and division(/) operators program for fibonacci numbers bit algorithms find the element that appears once detect if two integers have opposite signs count total set bits in all numbers from 1 to n swap bits in a given number add two numbers without using arithmetic operators smallest of three integers without comparison operators a boolean array puzzle program to count number of set bits in an (big) array next higher number with same number of set bits optimization techniques | set 1 (modulus) graph algorithms graph and its representations breadth first search or bfs for a graph depth first search or dfs for a graph applications of depth first search detect cycle in a directed graph disjoint set (or union-find) | set 1 (detect cycle in an undirected graph) detect cycle in an undirected graph longest path in a directed acyclic graph topological sorting check whether a given graph is bipartite or not randomized algorithms linearity of expectation expected number of trials until success randomized algorithms | set 0 (mathematical background) randomized algorithms | set 1 (introduction and analysis) randomized algorithms | set 2 (classification and applications) randomized algorithms | set 3 (1/2 approximate median) karger?s algorithm for minimum cut | set 1 (introduction and implementation) k?th smallest/largest element in unsorted array | set 2 (expected linear time) reservoir sampling shuffle a given array using fisher?yates shuffle algorithm branch and bound 0/1 knapsack using branch and bound implementation of 0/1 knapsack using branch and bound 8 puzzle problem using branch and bound job assignment problem using branch and bound n queen problem using branch and bound traveling salesman problem using branch and bound quizzes on algorithms analysis of algorithms sorting divide and conquer dynamic programming backtracking algorithm misc np complete searching analysis of algorithms (recurrences) dynamic programming last updated : 31 jul, 2021 practice problems on dynamic programming recent articles on dynamic programming dynamic programming is mainly an optimization over plain recursion. wherever we see a recursive solution that has repeated calls for same inputs, we can optimize it using dynamic programming. the idea is to simply store the results of subproblems, so that we do not have to re-compute them when needed later. this simple optimization reduces time complexities from exponential to polynomial. for example, if we write simple recursive solution for fibonacci numbers, we get exponential time complexity and if we optimize it by storing solutions of subproblems, time complexity reduces to linear. topics: basic concepts advanced concepts basic problems intermediate problems hard problems quick links basic concepts : tabulation vs memoizatation optimal substructure property overlapping subproblems property how to solve a dynamic programming problem ? advanced concepts : bitmasking and dynamic programming | set 1 bitmasking and dynamic programming | set-2 (tsp) digit dp | introduction basic problems : ugly numbers fibonacci numbers nth catalan number bell numbers (number of ways to partition a set) binomial coefficient permutation coefficient tiling problem gold mine problem coin change problem friends pairing problem subset sum problem subset sum problem in o(sum) space subset with sum divisible by m largest divisible pairs subset perfect sum problem (print all subsets with given sum) compute ncr % p choice of area cutting a rod tiling with dominoes painting fence algorithm newman?shanks?williams prime assembly line scheduling golomb sequence moser-de bruijn sequence newman-conway sequence find maximum length snake sequence print n terms of newman-conway sequence print fibonacci sequence using 2 variables print fibonacci series in reverse order count even length binary sequences with same sum of first and second half bits sequences of given length where every element is more than or equal to twice of previous longest common subsequence longest repeated subsequence longest increasing subsequence a space optimized solution of lcs lcs (longest common subsequence) of three strings maximum sum bi-tonic sub-sequence maximum sum increasing subsequence maximum product of an increasing subsequence count all subsequences having product less than k maximum subsequence sum such that no three are consecutive longest subsequence such that difference between adjacents is one maximum length subsequence with difference between adjacent elements as either 0 or 1 maximum sum increasing subsequence from a prefix and a given element after prefix is must maximum length chain of pairs print maximum length chain of pairs path with maximum average value maximum games played by winner maximum path sum in a triangle minimum sum path in a triangle maximum sum of a path in a right number triangle size of the subarray with maximum sum maximum sum of pairs with specific difference maximum size square sub-matrix with all 1s maximum number of segments of lengths a, b and c recursively break a number in 3 parts to get maximum sum maximum value with the choice of either dividing or considering as it is maximum weight path ending at any element of last row in a matrix maximum sum in a 2 x n grid such that no two elements are adjacent maximum difference of zeros and ones in binary string | set 2 (o(n) time) maximum path sum for each position with jumps under divisibility condition maximize the sum of selected numbers from an array to make it empty maximum subarray sum in an array created after repeated concatenation maximum path sum that starting with any cell of 0-th row and ending with any cell of (n-1)-th row min cost path minimum number of jumps to reach end minimum cost to fill given weight in a bag minimum sum of multiplications of n numbers minimum removals from array to make max ? min <= k minimum steps to minimize n as per given condition minimum number of edits ( operations ) require to convert string 1 to string 2 minimum time to write characters using insert, delete and copy operation longest common substring longest common substring (space optimized dp solution) sum of all substrings of a string representing a number | set 1 find number of endless points find n-th element from stern?s diatomic series find maximum possible stolen value from houses find number of solutions of a linear equation of n variables count number of ways to reach a given score in a game count ways to reach the nth stair using step 1, 2 or 3 count of different ways to express n as the sum of 1, 3 and 4 count ways to build street under given constraints count balanced binary trees of height h counting pairs when a person can form pair with at most one counts paths from a point to reach origin count number of ways to cover a distance count of arrays having consecutive element with different values count ways to divide circle using n non-intersecting chords count the number of ways to tile the floor of size n x m using 1 x m size tiles count all possible paths from top left to bottom right of a mxn matrix count number of ways to fill a ?n x 4? grid using ?1 x 4? tiles largest sum contiguous subarray smallest sum contiguous subarray size of array after repeated deletion of lis remove array end element to maximize the sum of product convert to strictly increasing array with minimum changes longest alternating (positive and negative) subarray starting at every index ways to sum to n using array elements with repetition allowed unique paths in a grid with obstacles number of n-digits non-decreasing integers number of ways to arrange n items under given constraints probability of reaching a point with 2 or 3 steps at a time value of continuous floor function : f(x) = f(floor(x/2)) + x number of decimal numbers of length k, that are strict monotone different ways to sum n using numbers greater than or equal to m intermediate problems : lobb number eulerian number delannoy number entringer number rencontres number jacobsthal and jacobsthal-lucas numbers super ugly number (number whose prime factors are in given set) floyd warshall algorithm bellman?ford algorithm 0-1 knapsack problem printing items in 0/1 knapsack unbounded knapsack (repetition of items allowed) temple offerings egg dropping puzzle dice throw problem word break problem vertex cover problem tile stacking problem box-stacking problem highway billboard problem largest independent set problem partition problem print equal sum sets of array (partition problem) | set 1 print equal sum sets of array (partition problem) | set 2 high-effort vs. low-effort tasks problem travelling salesman problem | set 1 (naive and dynamic programming) longest bitonic subsequence printing longest bitonic subsequence longest palindromic subsequence print longest palindromic subsequence longest palindrome subsequence with o(n) space count all palindromic subsequence in a given string longest palindromic substring | set 1 count all palindrome sub-strings in a string | set 1 number of palindromic subsequences of length k count of palindromic substrings in an index range shortest common supersequence maximum sum alternating subsequence longest alternating subsequence shortest uncommon subsequence longest repeating subsequence count distinct subsequences count distinct occurrences as a subsequence longest common increasing subsequence (lcs + lis) variations of lis lcs formed by consecutive segments of at least length k printing maximum sum increasing subsequence longest increasing odd even subsequence count number of increasing subsequences of size k printing longest increasing consecutive subsequence construction of longest increasing subsequence using dynamic programming longest zig-zag subsequence largest sum zigzag sequence in a matrix find all distinct subset (or subsequence) sums of an array print all longest common sub-sequences in lexicographical order printing longest common subsequence | set 2 (printing all) length of longest balanced subsequence non-decreasing subsequence of size k with minimum sum longest common subsequence with at most k changes allowed weighted job scheduling weighted job scheduling | set 2 (using lis) weighted job scheduling in o(n log n) time number of paths with exactly k coins minimum number of coins that make a given value collect maximum coins before hitting a dead end coin game winner where every player has three choices probability of getting at least k heads in n tosses of coins count all increasing subsequences count number of paths with at-most k turns count possible ways to construct buildings count number of ways to jump to reach end count number of ways to reach destination in a maze count all triplets whose sum is equal to a perfect cube count number of binary strings without consecutive 1?s count number of subsets having a particular xor value count possible decodings of a given digit sequence count number of ways to partition a set into k subsets count of n digit numbers whose sum of digits equals to given sum count ways to assign unique cap to every person count binary strings with k times appearing adjacent two set bits count of strings that can be formed using a, b and c under given constraints count digit groupings of a number with given constraints count all possible walks from a source to a destination with exactly k edges count derangements (permutation such that no element appears in its original position) count total number of n digit numbers such that the difference between sum of even and odd digits is 1 maximum product cutting maximum profit from sale of wines maximum size subset with given sum maximum difference of zeros and ones in binary string maximum and minimum values of an algebraic expression maximum average sum partition of an array maximize array elements upto given number maximum subarray sum in o(n) using prefix sum maximum sum subarray removing at most one element k maximum sums of non-overlapping contiguous sub-arrays maximum product subarray | added negative product case find maximum sum array of length less than or equal to m find maximum dot product of two arrays with insertion of 0?s choose maximum weight with given weight and value ratio maximum sum subsequence with at-least k distant elements maximum profit by buying and selling a share at most twice maximum sum path in a matrix from top to bottom maximum decimal value path in a binary matrix finding the maximum square sub-matrix with all equal elements maximum points collected by two persons allowed to meet once maximum number of trailing zeros in the product of the subsets of size k minimum sum path in 3-d array minimum insertions to sort an array minimum sum submatrix in a given 2d array minimum initial points to reach destination minimum cost to make two strings identical paper cut into minimum number of squares | set 2 minimum and maximum values of an expression with * and + minimum insertions to form a palindrome minimum number of deletions to make a string palindrome minimum number of deletions to make a string palindrome | set 2 minimum jumps to reach last building in a matrix sub-tree with minimum color difference in a 2-coloured tree minimum number of deletions to make a sorted sequence minimum number of squares whose sum equals to given number n remove minimum elements from either side such that 2*min becomes more than max minimal moves to form a string by adding characters or appending string itself minimum steps to delete a string after repeated deletion of palindrome substrings clustering/partitioning an array such that sum of square differences is minimum minimum sum subsequence such that at least one of every four consecutive elements is picked minimum cost to make longest common subsequence of length k minimum cost to make two strings identical by deleting the digits minimum time to finish tasks without skipping two consecutive minimum cells required to reach destination with jumps equal to cell values minimum number of deletions and insertions to transform one string into another find minimum adjustment cost of an array find if string is k-palindrome or not | set 1 find if string is k-palindrome or not | set 2 find jobs involved in weighted job scheduling find the longest increasing subsequence in circular manner find the longest path in a matrix with given constraints find the minimum cost to reach destination using a train find minimum sum such that one of every three consecutive elements is taken find number of times a string occurs as a subsequence in given string find length of the longest consecutive path from a given starting character find length of longest subsequence of one string which is substring of another string find longest bitonic sequence such that increasing and decreasing parts are from two different arrays wildcard pattern matching wildcard pattern matching having three symbols ( * , + , ? ) dynamic programming | wildcard pattern matching | linear time and constant space check if any valid sequence is divisible by m check for possible path in 2d matrix check if possible to cross the matrix with given power check if it is possible to transform one string to another given a large number, check if a subsequence of digits is divisible by 8 hosoya?s triangle optimal strategy for a game optimal binary search tree number of permutation with k inversions largest divisible pairs subset sum of average of all subsets compute sum of digits in all numbers from 1 to n total number of non-decreasing numbers with n digits non-crossing lines to connect points in a circle dynamic programming | building bridges longest increasing path in matrix prefix sum of matrix (or 2d array) multistage graph (shortest path) number of n digit stepping numbers number of substrings divisible by 8 but not by 3 number of ordered pairs such that (ai & aj) = 0 number of ways to form a heap with n distinct integers ways to write n as sum of two or more positive integers modify array to maximize sum of adjacent differences sum of products of all combination taken (1 to n) at a time maximize the binary matrix by filpping submatrix once length of the longest substring without repeating characters longest even length substring such that sum of first and second half is same shortest path with exactly k edges in a directed and weighted graph ways to arrange balls such that adjacent balls are of different types ways of transforming one string to other by removing 0 or more characters balanced expressions such that given positions have opening brackets longest alternating sub-array starting from every index in a binary array partition a set into two subsets such that the difference of subset sums is minimum pyramid form (increasing then decreasing) consecutive array using reduce operations hard problems : palindrome partitioning word wrap problem mobile numeric keypad problem the painter?s partition problem boolean parenthesization problem program for bridge and torch problem a space optimized dp solution for 0-1 knapsack problem matrix chain multiplication printing brackets in matrix chain multiplication problem number of palindromic paths in a matrix largest rectangular sub-matrix whose sum is 0 largest rectangular sub-matrix having sum divisible by k largest area rectangular sub-matrix with equal number of 1?s and 0?s maximum sum bitonic subarray maximum sum rectangle in a 2d matrix maximum subarray sum excluding certain elements maximum weight transformation of a given string collect maximum points in a grid using two traversals k maximum sums of overlapping contiguous sub-arrays how to print maximum number of a?s using given four keys maximize arr[j] ? arr[i] + arr[l] ? arr[k], such that i < j < k < l maximum profit by buying and selling a share at most k times maximum points from top left of matrix to bottom right and return back check whether row or column swaps produce maximum size binary sub-matrix with all 1s minimum cost polygon triangulation minimum cost to sort strings using reversal operations of different costs find minimum possible size of array with given rules for removing elements minimum number of elements which are not part of increasing or decreasing subsequence in array count ways to increase lcs length of two strings by one count of ap (arithmetic progression) subsequences in an array count of arrays in which all adjacent elements are such that one of them divide the another number of nges to the right longest arithmetic progression longest geometric progression dynamic programming on trees | set-1 dynamic programming on trees | set-2 all ways to add parenthesis for evaluation shortest possible combination of two strings check if all people can vote on two machines find if a string is interleaved of two other strings longest repeating and non-overlapping substring probability of knight to remain in the chessboard number of subsequences of the form a^i b^j c^k number of subsequences in a string divisible by n printing shortest common supersequence smallest length string with repeated replacement of two distinct adjacent number of ways to insert a character to increase the lcs by one traversal of tree with k jumps allowed between nodes of same height find all combinations of k-bit numbers with n bits set where 1 <= n <= k in sorted order quick links : top 20 dynamic programming interview questions ?practice problems? on dynamic programming ?quiz? on dynamic programming geeksforgeeks courses: 1. language foundation courses [c++ / java / python ] learn any programming language from scratch and understand all its fundamentals concepts for a strong programming foundation in the easiest possible manner with help of geeksforgeeks language foundation courses ? java foundation | python foundation | c++ foundation 2. geeks classes live get interview-centric live online classes on data structure and algorithms from any geographical location to learn and master dsa concepts for enhancing your problem-solving & programming skills and to crack the interview of any product-based company ? geeks classes: live session 3. complete interview preparation get fulfilled all your interview preparation needs at a single place with the complete interview preparation course that provides you all the required stuff to prepare for any product-based, service-based, or start-up company at the most affordable prices. 4. dsa self paced start learning data structures and algorithms to prepare for the interviews of top it giants like microsoft, amazon, adobe, etc. with dsa self-paced course where you will get to learn and master dsa from basic to advanced level and that too at your own pace and convenience. 5. company specific courses ? amazon, microsoft, tcs & wipro crack the interview of any product-based giant company by specifically preparing with the questions that these companies usually ask in their coding interview round. refer geeksforgeeks company specific courses: amazon sde test series, etc. if you like geeksforgeeks and would like to contribute, you can also write an article and mail your article to review-team@geeksforgeeks.org. see your article appearing on the geeksforgeeks main page and help other geeks. please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. my personal notes arrow_drop_up save writing code in comment? please use ide.geeksforgeeks.org, generate link and share the link here. load comments comments old comments what's new geeks summer carnival 2022 view details data structures & algorithms- self paced course view details complete interview preparation view details most popular articles c program for breadth first search or bfs for a graph must do coding questions for product based companies python opencv - waitkey() function ways to find out list of all open ports in linux how to get current route in next.js ? most visited articles 7 major challenges faced by machine learning professionals simple ways to read tsv files in python appending to list in python dictionary how to redirect to another page in reactjs ? libraries in python ? 5th floor, a-118, sector-136, noida, uttar pradesh - 201305 feedback@geeksforgeeks.org company about us careers in media contact us privacy policy copyright policy learn algorithms data structures sde cheat sheet machine learning cs subjects video tutorials news top news technology work & career business finance lifestyle languages python java cpp golang c# sql web development web tutorials django tutorial html css javascript bootstrap contribute write an article improve an article pick topics to write write interview experience internships video internship @geeksforgeeks , some rights reserved we use cookies to ensure you have the best browsing experience on our website. by using our site, you acknowledge that you have read and understood our cookie policy & privacy policy got it ! start your coding journey now! login register