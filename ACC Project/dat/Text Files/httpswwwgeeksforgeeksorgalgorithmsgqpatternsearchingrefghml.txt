pattern searching - geeksforgeeks skip to content tutorials practice ds & algo. must do questions dsa topic-wise dsa company-wise algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php software designs software design patterns system design tutorial school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials geek on the top careers internship jobs apply for jobs post a job job-a-thon gsc 2022 courses write come write articles for us and get featured practice learn and code with the best industry experts premium get access to ad-free content, doubt assistance and more! jobs come and find your dream job with us geeks digest quizzes geeks campus gblog articles ide campus mantri home saved videos courses gblog puzzles what's new ? change language data structures algorithms interview preparation topic-wise practice c++ java python competitive programming machine learning web development sde sheet puzzles gfg school projects related articles ? table of contents algorithms algorithms introduction to algorithms difference between algorithm, pseudocode and program difference between algorithm and flowchart analysis of algorithms analysis of algorithms | set 1 (asymptotic analysis) analysis of algorithms | set 2 (worst, average and best cases) analysis of algorithms | set 3 (asymptotic notations) analysis of algorithms | little o and little omega notations lower and upper bound theory analysis of algorithms | set 4 (analysis of loops) analysis of algorithm | set 4 (solving recurrences) analysis of algorithm | set 5 (amortized analysis introduction) what does ?space complexity? mean? pseudo-polynomial algorithms searching and sorting interpolation search vs binary search stability in sorting algorithms when does the worst case of quicksort occur? lower bound for comparison based sorting algorithms which sorting algorithm makes minimum number of memory writes? find the minimum length unsorted subarray, sorting which makes the complete array sorted merge sort for linked lists sort a nearly sorted (or k sorted) array iterative quick sort greedy algorithms activity selection problem | greedy algo-1 kruskal?s minimum spanning tree algorithm | greedy algo-2 huffman coding | greedy algo-3 efficient huffman coding for sorted input | greedy algo-4 prim?s minimum spanning tree (mst) | greedy algo-5 prim?s mst for adjacency list representation | greedy algo-6 dijkstra?s shortest path algorithm | greedy algo-7 dijkstra?s algorithm for adjacency list representation | greedy algo-8 job sequencing problem dynamic programming overlapping subproblems property in dynamic programming | dp-1 optimal substructure property in dynamic programming | dp-2 longest increasing subsequence | dp-3 longest common subsequence | dp-4 edit distance | dp-5 min cost path | dp-6 coin change | dp-7 matrix chain multiplication | dp-8 binomial coefficient | dp-9 0-1 knapsack problem | dp-10 dynamic programming pattern searching naive algorithm for pattern searching kmp algorithm for pattern searching rabin-karp algorithm for pattern searching optimized naive algorithm for pattern searching finite automata algorithm for pattern searching pattern searching | set 6 (efficient construction of finite automata) boyer moore algorithm for pattern searching suffix array | set 1 (introduction) anagram substring search (or search for all permutations) pattern searching using a trie of all suffixes pattern searching other string algorithms manacher?s algorithm ? linear time longest palindromic substring ? part 1 manacher?s algorithm ? linear time longest palindromic substring ? part 2 manacher?s algorithm ? linear time longest palindromic substring ? part 3 manacher?s algorithm ? linear time longest palindromic substring ? part 4 longest even length substring such that sum of first and second half is same print all possible strings that can be made by placing spaces backtracking write a program to print all permutations of a given string the knight?s tour problem | backtracking-1 rat in a maze | backtracking-2 n queen problem | backtracking-3 subset sum | backtracking-4 m coloring problem | backtracking-5 hamiltonian cycle | backtracking-6 sudoku | backtracking-7 tug of war solving cryptarithmetic puzzles | backtracking-8 divide and conquer divide and conquer algorithm | introduction write a program to calculate pow(x,n) median of two sorted arrays of same size count inversions in an array | set 1 (using merge sort) closest pair of points using divide and conquer algorithm divide and conquer | set 5 (strassen?s matrix multiplication) quick sort vs merge sort divide and conquer geometric algorithms closest pair of points | o(nlogn) implementation how to check if two given line segments intersect? how to check if a given point lies inside or outside a polygon? convex hull | set 1 (jarvis?s algorithm or wrapping) convex hull | set 2 (graham scan) given n line segments, find if any two segments intersect check whether a given point lies inside a triangle or not how to check if given four points form a square mathematical algorithms write an efficient method to check if a number is multiple of 3 efficient way to multiply with 7 lucky numbers write a program to add two numbers in base 14 babylonian method for square root multiply two integers without using multiplication, division and bitwise operators, and no loops print all combinations of points that can compose a given number write you own power without using multiplication(*) and division(/) operators program for fibonacci numbers bit algorithms find the element that appears once detect if two integers have opposite signs count total set bits in all numbers from 1 to n swap bits in a given number add two numbers without using arithmetic operators smallest of three integers without comparison operators a boolean array puzzle program to count number of set bits in an (big) array next higher number with same number of set bits optimization techniques | set 1 (modulus) graph algorithms graph and its representations breadth first search or bfs for a graph depth first search or dfs for a graph applications of depth first search detect cycle in a directed graph disjoint set (or union-find) | set 1 (detect cycle in an undirected graph) detect cycle in an undirected graph longest path in a directed acyclic graph topological sorting check whether a given graph is bipartite or not randomized algorithms linearity of expectation expected number of trials until success randomized algorithms | set 0 (mathematical background) randomized algorithms | set 1 (introduction and analysis) randomized algorithms | set 2 (classification and applications) randomized algorithms | set 3 (1/2 approximate median) karger?s algorithm for minimum cut | set 1 (introduction and implementation) k?th smallest/largest element in unsorted array | set 2 (expected linear time) reservoir sampling shuffle a given array using fisher?yates shuffle algorithm branch and bound 0/1 knapsack using branch and bound implementation of 0/1 knapsack using branch and bound 8 puzzle problem using branch and bound job assignment problem using branch and bound n queen problem using branch and bound traveling salesman problem using branch and bound quizzes on algorithms analysis of algorithms sorting divide and conquer dynamic programming backtracking algorithm misc np complete searching analysis of algorithms (recurrences) table of contents algorithms algorithms introduction to algorithms difference between algorithm, pseudocode and program difference between algorithm and flowchart analysis of algorithms analysis of algorithms | set 1 (asymptotic analysis) analysis of algorithms | set 2 (worst, average and best cases) analysis of algorithms | set 3 (asymptotic notations) analysis of algorithms | little o and little omega notations lower and upper bound theory analysis of algorithms | set 4 (analysis of loops) analysis of algorithm | set 4 (solving recurrences) analysis of algorithm | set 5 (amortized analysis introduction) what does ?space complexity? mean? pseudo-polynomial algorithms searching and sorting interpolation search vs binary search stability in sorting algorithms when does the worst case of quicksort occur? lower bound for comparison based sorting algorithms which sorting algorithm makes minimum number of memory writes? find the minimum length unsorted subarray, sorting which makes the complete array sorted merge sort for linked lists sort a nearly sorted (or k sorted) array iterative quick sort greedy algorithms activity selection problem | greedy algo-1 kruskal?s minimum spanning tree algorithm | greedy algo-2 huffman coding | greedy algo-3 efficient huffman coding for sorted input | greedy algo-4 prim?s minimum spanning tree (mst) | greedy algo-5 prim?s mst for adjacency list representation | greedy algo-6 dijkstra?s shortest path algorithm | greedy algo-7 dijkstra?s algorithm for adjacency list representation | greedy algo-8 job sequencing problem dynamic programming overlapping subproblems property in dynamic programming | dp-1 optimal substructure property in dynamic programming | dp-2 longest increasing subsequence | dp-3 longest common subsequence | dp-4 edit distance | dp-5 min cost path | dp-6 coin change | dp-7 matrix chain multiplication | dp-8 binomial coefficient | dp-9 0-1 knapsack problem | dp-10 dynamic programming pattern searching naive algorithm for pattern searching kmp algorithm for pattern searching rabin-karp algorithm for pattern searching optimized naive algorithm for pattern searching finite automata algorithm for pattern searching pattern searching | set 6 (efficient construction of finite automata) boyer moore algorithm for pattern searching suffix array | set 1 (introduction) anagram substring search (or search for all permutations) pattern searching using a trie of all suffixes pattern searching other string algorithms manacher?s algorithm ? linear time longest palindromic substring ? part 1 manacher?s algorithm ? linear time longest palindromic substring ? part 2 manacher?s algorithm ? linear time longest palindromic substring ? part 3 manacher?s algorithm ? linear time longest palindromic substring ? part 4 longest even length substring such that sum of first and second half is same print all possible strings that can be made by placing spaces backtracking write a program to print all permutations of a given string the knight?s tour problem | backtracking-1 rat in a maze | backtracking-2 n queen problem | backtracking-3 subset sum | backtracking-4 m coloring problem | backtracking-5 hamiltonian cycle | backtracking-6 sudoku | backtracking-7 tug of war solving cryptarithmetic puzzles | backtracking-8 divide and conquer divide and conquer algorithm | introduction write a program to calculate pow(x,n) median of two sorted arrays of same size count inversions in an array | set 1 (using merge sort) closest pair of points using divide and conquer algorithm divide and conquer | set 5 (strassen?s matrix multiplication) quick sort vs merge sort divide and conquer geometric algorithms closest pair of points | o(nlogn) implementation how to check if two given line segments intersect? how to check if a given point lies inside or outside a polygon? convex hull | set 1 (jarvis?s algorithm or wrapping) convex hull | set 2 (graham scan) given n line segments, find if any two segments intersect check whether a given point lies inside a triangle or not how to check if given four points form a square mathematical algorithms write an efficient method to check if a number is multiple of 3 efficient way to multiply with 7 lucky numbers write a program to add two numbers in base 14 babylonian method for square root multiply two integers without using multiplication, division and bitwise operators, and no loops print all combinations of points that can compose a given number write you own power without using multiplication(*) and division(/) operators program for fibonacci numbers bit algorithms find the element that appears once detect if two integers have opposite signs count total set bits in all numbers from 1 to n swap bits in a given number add two numbers without using arithmetic operators smallest of three integers without comparison operators a boolean array puzzle program to count number of set bits in an (big) array next higher number with same number of set bits optimization techniques | set 1 (modulus) graph algorithms graph and its representations breadth first search or bfs for a graph depth first search or dfs for a graph applications of depth first search detect cycle in a directed graph disjoint set (or union-find) | set 1 (detect cycle in an undirected graph) detect cycle in an undirected graph longest path in a directed acyclic graph topological sorting check whether a given graph is bipartite or not randomized algorithms linearity of expectation expected number of trials until success randomized algorithms | set 0 (mathematical background) randomized algorithms | set 1 (introduction and analysis) randomized algorithms | set 2 (classification and applications) randomized algorithms | set 3 (1/2 approximate median) karger?s algorithm for minimum cut | set 1 (introduction and implementation) k?th smallest/largest element in unsorted array | set 2 (expected linear time) reservoir sampling shuffle a given array using fisher?yates shuffle algorithm branch and bound 0/1 knapsack using branch and bound implementation of 0/1 knapsack using branch and bound 8 puzzle problem using branch and bound job assignment problem using branch and bound n queen problem using branch and bound traveling salesman problem using branch and bound quizzes on algorithms analysis of algorithms sorting divide and conquer dynamic programming backtracking algorithm misc np complete searching analysis of algorithms (recurrences) pattern searching last updated : 05 nov, 2021 practice problems on pattern searching recent articles on pattern searching the pattern searching algorithms are sometimes also referred to as string searching algorithms and are considered as a part of the string algorithms. these algorithms are useful in the case of searching a string within another string. topics : algorithms questions algorithms : naive pattern searching kmp algorithm rabin-karp algorithm a naive pattern searching question finite automata efficient construction of finite automata boyer moore algorithm ? bad character heuristic boyer moore algorithm | good suffix heuristic aho-corasick algorithm for pattern searching suffix array kasai?s algorithm for construction of lcp array from suffix array z algorithm (linear time pattern searching algorithm) online algorithm for checking palindrome in a stream manacher?s algorithm ? linear time longest palindromic substring ? part 4 ukkonen?s suffix tree construction ? part 1 ukkonen?s suffix tree construction ? part 2 ukkonen?s suffix tree construction ? part 3 ukkonen?s suffix tree construction ? part 4 ukkonen?s suffix tree construction ? part 5 ukkonen?s suffix tree construction ? part 6 generalized suffix tree 1 questions : anagram substring search (or search for all permutations) pattern searching using a trie of all suffixes program to wish women?s day program to replace a word with asterisks in a sentence dynamic programming | wildcard pattern matching | linear time and constant space pattern searching using c++ library longest prefix which is also suffix splitting a numeric string count of number of given string in 2d character array find minimum shift for longest common prefix find all the patterns of ?1(0+)1? in a given string | set 1(general approach) find all the patterns of ?1(0+)1? in a given string | set 2(regular expression approach) is_permutation() in c++ and its application for anagram search match expression where a single special character in pattern can match one or more characters maximum length prefix of one string that occurs as subsequence in another wildcard pattern matching find all occurrences of a given word in a matrix search a word in a 2d grid of characters string matching where one string contains wildcard characters suffix tree application 1 ? substring check suffix tree application 2 ? searching all patterns suffix tree application 3 ? longest repeated substring suffix tree application 4 ? build suffix array suffix tree application 5 -longest common substring suffix tree application 6 ? longest palindromic substring my personal notes arrow_drop_up save writing code in comment? please use ide.geeksforgeeks.org, generate link and share the link here. load comments comments old comments what's new geeks summer carnival 2022 view details data structures & algorithms- self paced course view details complete interview preparation view details most popular articles best time to buy and sell stock must do coding questions for product based companies axios in react: a guide for beginners implementation of bit stuffing and bit destuffing stratified sampling in pandas most visited articles python opencv - waitkey() function ways to find out list of all open ports in linux pandas - plot multiple time series dataframe into a single plot create a telegram bot using python how to get current route in next.js ? ? 5th floor, a-118, sector-136, noida, uttar pradesh - 201305 feedback@geeksforgeeks.org company about us careers in media contact us privacy policy copyright policy learn algorithms data structures sde cheat sheet machine learning cs subjects video tutorials news top news technology work & career business finance lifestyle languages python java cpp golang c# sql web development web tutorials django tutorial html css javascript bootstrap contribute write an article improve an article pick topics to write write interview experience internships video internship @geeksforgeeks , some rights reserved we use cookies to ensure you have the best browsing experience on our website. by using our site, you acknowledge that you have read and understood our cookie policy & privacy policy got it ! start your coding journey now! login register